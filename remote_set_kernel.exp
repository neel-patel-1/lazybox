#!/usr/bin/expect --
set timeout -1

# Set kernel of a remote target host as user specified
#
# Internally, kernel setting is done via `scripts/set_kernel/set_kernel.py` of
# lazybox.  For the reason, lazybox should be installed on the remote target
# machine before execution of this program.
#
# Usage:
# expect remote_set_kernel.exp <username> <target> <ssh port> <password> \
#				<lazybox path> <bootloader> \
#				<kernel name> <kernel param>

if { [llength $argv] < 7 } {
	puts "usage: "
	puts "expect remote_set_kernel.exp \\"
	puts "			<username> <target> <ssh port> <password> \\"
	puts "			<lazybox path> <bootloader> \\"
	puts "			<kernel name> \[kernel param\]"
	exit 1
}

set username [lindex $argv 0]
set target [lindex $argv 1]
set ssh_port [lindex $argv 2]
set password [lindex $argv 3]
set lbpath [lindex $argv 4]
set bootloader [lindex $argv 5]
set kern_name [lindex $argv 6]
set kern_param ""

if { [llength $argv] > 7 } {
	set kern_param [lindex $argv 7]
}

# login
spawn ssh -p $ssh_port $username@$target
expect "*password*"
send "$password\r"
expect "*$target*$ "

# be root
send "sudo su\r"
expect "*password*"
send "$password\r"
expect "*$target*# "

# move to lazybox
send "pushd $lbpath\r"
expect "*$target*# "

# change kernel
send "./scripts/set_kernel/set_kernel.py $bootloader $kern_name $kern_param\r"
expect "*$target*# "

send "sync\r"
expect "*$target*# "
send "popd\r"
expect "*$target*# "

send "reboot\r"
expect "*$target*# "

# wait 30 seconds for reboot
set count 30
puts "\nwait $count seconds for reboot"
while { $count > 0 } {
	sleep 1
	send_user "$count "
	set count [expr $count - 1]
}
puts ""
